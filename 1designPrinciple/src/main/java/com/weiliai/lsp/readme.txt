里氏替换原则(Liskov Substitution Principle,LSP)是指如果对每一个类型T1的对象O1,都有类型T2的对象O2,使得以T1定义的所有程序P在所有的
对象O1都替换成O2时,程序P的行为没有发生变化,那么类型T2是类型T1的子类型.

通俗的讲:一个软件实体如果使用一个父类,那么一定使用于其子类,所有引用父类的地方必须能透明地使用其子类的对象,子类对象能够替换父类对象,而程序逻辑不变.

引申的含义:子类可以扩展父类的功能,但不能改变父类原有的功能.
    1.子类可以实现父类的抽象方法,但不能覆盖父类的非抽象方法.
    2.子类可以增加自己特有的方法.
    3.当子类的方法重载父类方法时,方法前置条件(即方法的输入/入参)要比父类的方法输入参数更宽松
    4.当子类的方法是实现父类方法时(重写/重载或实现抽象方法),方法的后置条件(即方法的输出/返回值)要比父类更严格或与父类一样.

优点:
    1.约束继承泛滥,是开闭原则的一种体现.
    2.加强程序的健壮性,同时变更时也可以做到非常好的兼容性,提高程序的可维护性和扩展性,降低需求变更引入的风险.